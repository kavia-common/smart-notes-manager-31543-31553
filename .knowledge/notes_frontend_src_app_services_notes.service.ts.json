{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service 'NotesService' responsible for managing notes. It includes methods for creating, retrieving, updating, filtering, soft deleting, restoring, and permanently deleting notes. The service handles local storage persistence and utilizes Angular's dependency injection and reactive signals.", "external_files": ["../models/note.model"], "external_methods": ["signal", "signal.asReadonly"], "published": ["NotesService"], "classes": [{"name": "NotesService", "description": "An Angular service class that manages notes, providing CRUD operations, filtering, and persistence logic."}], "methods": [{"name": "private load(): Note[] { load", "description": "Loads notes from local storage, parsing the JSON data and returning an array of notes.", "scope": "NotesService", "scopeKind": "class"}, {"name": "save", "description": "Serializes current notes and saves them to local storage."}, {"name": "list(opts?: { starred?: boolean; trashed?: boolean; search?: string }): Note[] { list", "description": "Returns a filtered and sorted list of notes based on optional parameters like starred, trashed, and search query.", "scope": "NotesService", "scopeKind": "class"}, {"name": "get(id: string): Note | undefined { get", "description": "Retrieves a single note by its ID.", "scope": "NotesService", "scopeKind": "class"}, {"name": "create(data: { title: string; content: string }): Note { create", "description": "Creates a new note with provided title and content, assigns timestamps, and updates storage.", "scope": "NotesService", "scopeKind": "class"}, {"name": "update(id: string, patch: Partial<Pick<Note, 'title' | 'content' | 'starred' | 'trashed'>>) { update", "description": "Updates specified fields of a note by ID and refreshes the update timestamp.", "scope": "NotesService", "scopeKind": "class"}, {"name": "toggleStar(id: string) { toggleStar", "description": "Toggles the 'starred' status of a note.", "scope": "NotesService", "scopeKind": "class"}, {"name": "softDelete(id: string) { softDelete", "description": "Marks a note as trashed.", "scope": "NotesService", "scopeKind": "class"}, {"name": "restore(id: string) { restore", "description": "Restores a trashed note.", "scope": "NotesService", "scopeKind": "class"}, {"name": "deletePermanent(id: string) { deletePermanent", "description": "Permanently deletes a note from the list and updates storage.", "scope": "NotesService", "scopeKind": "class"}, {"name": "function generateId() { generateId", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "private notesSignal = signal<Note[]>(this.load()); this", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}], "calls": ["this.notesSignal()", "localStorage.setItem", "localStorage.getItem", "JSON.parse", "Array.prototype.filter", "Array.prototype.sort", "this.update", "this.save"], "search-terms": ["NotesService", "localStorage persistence", "Angular | TypeScript notes management", "soft delete & restore", "signal API"], "state": 2, "file_id": 29, "knowledge_revision": 94, "git_revision": "", "revision_history": [{"65": ""}, {"93": ""}, {"94": ""}], "ctags": [{"_type": "tag", "name": "NotesService", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^export class NotesService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^const STORAGE_KEY = 'smart-notes';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  const c: any = (globalThis as any).crypto;$/", "language": "TypeScript", "kind": "constant", "scope": "generateId", "scopeKind": "function"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  create(data: { title: string; content: string }): Note {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "deletePermanent", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  deletePermanent(id: string) {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "generateId", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^function generateId() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  get(id: string): Note | undefined {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  list(opts?: { starred?: boolean; trashed?: boolean; search?: string }): Note[] {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "load", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private load(): Note[] {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const note = this.get(id);$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.toggleStar", "scopeKind": "method"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const note: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.create", "scopeKind": "method"}, {"_type": "tag", "name": "notesSignal", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private notesSignal = signal<Note[]>(this.load());$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const now = Date.now();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.create", "scopeKind": "method"}, {"_type": "tag", "name": "parsed", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const parsed = JSON.parse(raw) as Note[];$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.load", "scopeKind": "method"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const q = search.toLowerCase();$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.list", "scopeKind": "method"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const raw = localStorage.getItem(STORAGE_KEY);$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.load", "scopeKind": "method"}, {"_type": "tag", "name": "restore", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  restore(id: string) {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const { starred, trashed, search } = opts ?? {};$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.list", "scopeKind": "method"}, {"_type": "tag", "name": "softDelete", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  softDelete(id: string) {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "starred", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const { starred, trashed, search } = opts ?? {};$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.list", "scopeKind": "method"}, {"_type": "tag", "name": "this", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private notesSignal = signal<Note[]>(this.load());$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "toggleStar", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  toggleStar(id: string) {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "trashed", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const { starred, trashed, search } = opts ?? {};$/", "language": "TypeScript", "kind": "constant", "scope": "NotesService.list", "scopeKind": "method"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/smart-notes-manager-31543-31553/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  update(id: string, patch: Partial<Pick<Note, 'title' | 'content' | 'starred' | 'trashed'>>) {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}], "hash": "dca6cd6d11640b7bf6e91d240cac8f05", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/notes.service.ts", "fields": [{"name": "private notesSignal = signal<Note[]>(this.load());", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}]}